{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","pages/HomePage.js","Image.js","pages/Footer.js","pages/components/Settingsblockelement.js","pages/SettingsPage.js","pages/TemperaturePage.js","pages/components/ShortCutElement.js","pages/ShortCutsPage.js","App.js","serviceWorker.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","page","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","style","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","console","log","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","src","alt","setInputValue","doLogin","HomePage","height","margin","width","top","Image","Footer","Settingsblockelement","background-color","weight","srcNOTACTIVE","img","name","SettingsPage","doLogout","Temperaturepage","ShortCutElement","ShortCutsPage","id","cvid","cvv","lichtaus","lichtan","customeValue","App","TemperaturePage","observer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dbe88a5c.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\n/**\r\n * UserStore\r\n */\r\n\r\n class UserStore{\r\n     constructor(){\r\n        extendObservable(this, {\r\n             loading: false, //true\r\n             isLoggedIn: true, // false\r\n             username: 'Test', // ''\r\n             page: 'home' // home\r\n\r\n         })\r\n     }\r\n }\r\n\r\n export default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n          className=\"input\"\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={ (e) => this.props.onChange(e.target.value) }\r\n        >\r\n        </input>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <button \r\n          className=\"btn\"\r\n          style={this.props.style}\r\n          disabled={this.props.disabled}\r\n          onClick={() => this.props.onClick() }\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password:'',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n  async doLogin(){\r\n    console.log(\"username: \" + this.state.username)\r\n    console.log(\"password: \" + this.state.password)\r\n    if(!this.state.username) return;\r\n    if(!this.state.password) return;\r\n\r\n    this.setState({\r\n      buttonDisabled:true\r\n    })\r\n\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }, body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if(result && result.success){\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if(result && !result.success){\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"loginForm\">\r\n        <img src=\"/img/schwabbel.png\" alt=\"logo\">\r\n        </img>\r\n        <InputField\r\n        type='text'\r\n        placeholder='Benutzername'\r\n        value={this.state.username ? this.state.username : ''}\r\n        onChange={ (val) => this.setInputValue('username', val) }\r\n        />\r\n        <InputField\r\n        type='password'\r\n        placeholder='●●●●●●●●●'\r\n        value={this.state.password ? this.state.password : ''}\r\n        onChange={ (val) => this.setInputValue('password', val) }\r\n        />\r\n        <SubmitButton\r\n          text='EINLOGGEN'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\n\r\n\r\nclass HomePage extends React.Component {\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"homeBox\">\r\n        <img src=\"img/homepageimg.svg\" alt=\"homepageimg\" height=\"100%\" margin=\"auto\" width=\"100%\" top=\"0\"></img>\r\n        <h1>WIP</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nclass Image extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"image\">\r\n        <img \r\n          className=\"btn\"\r\n          src={this.props.src}\r\n          alt={this.props.alt}\r\n          onClick={() => this.props.onClick() }\r\n        >\r\n        </img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport Image from '../Image';\r\nimport UserStore from '../stores/UserStore';\r\n\r\n\r\nclass Footer extends React.Component {\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"footer\">\r\n      <Image\r\n      src='/img/lamph.svg'\r\n      alt='home'\r\n      onClick={() => {\r\n        UserStore.page = \"home\";\r\n      }}\r\n      />\r\n      <Image\r\n      src='/img/temperature.svg'\r\n      alt='temperature'\r\n      onClick={() => {\r\n        UserStore.page = \"temperature\";\r\n      }}\r\n      />\r\n      <Image\r\n      src='/img/shortcuts.svg'\r\n      alt='shortcuts'\r\n      onClick={() => {\r\n        UserStore.page = \"shortcuts\";\r\n      }}\r\n      />\r\n      <Image\r\n      src='/img/settings.svg'\r\n      alt='settings'\r\n      onClick={() => {\r\n        UserStore.page = \"settings\";\r\n      }}\r\n      />\r\n          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\n\r\nclass Settingsblockelement extends React.Component {\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"settingsblock\">\r\n          <div background-color=\"#7289DA\" weight=\"30%\" onClick={() => this.props.onClick()}>\r\n              <div background-color=\"#7289DA\"> </div>\r\n              //<img alt=\"\" srcNOTACTIVE={this.props.img} weight=\"15px\"></img>\r\n              <div>{this.props.name}</div> \r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settingsblockelement;\r\n","import React from 'react';\r\nimport Settingsblockelement from './components/Settingsblockelement';\r\nimport UserStore from '../stores/UserStore';\r\n\r\n\r\nclass SettingsPage extends React.Component {\r\n  \r\n  async doLogout(){\r\n    try{\r\n\r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      let result = await res.json();\r\n\r\n      if(result && result.success){\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"settings\">\r\n        <p>Dein Zuhause</p>\r\n        <Settingsblockelement \r\n        img=\"/img/settings.svg\"\r\n        name=\"Hue Bridges\"\r\n        onClick={()=>alert(\"This feature is not available yet!\")}\r\n        />\r\n        <Settingsblockelement \r\n        img=\"/img/settings.svg\"\r\n        name=\"Zubehör\"\r\n        onClick={()=>alert(\"This feature is not available yet!\")}\r\n        />\r\n        <Settingsblockelement \r\n        img=\"/img/settings.svg\"\r\n        name=\"Lampeneinstellungen\"\r\n        onClick={()=>alert(\"This feature is not available yet!\")}\r\n        />\r\n        <p>Automatiche Lichtsteuerung</p>\r\n        <Settingsblockelement \r\n        img=\"/img/settings.svg\"\r\n        name=\"Widgets\"\r\n        onClick={()=>alert(\"This feature is not available yet!\")}\r\n        />\r\n        <p>APP</p>\r\n        <Settingsblockelement \r\n        img=\"/img/settings.svg\"\r\n        name=\"Softwareupdate\"\r\n        onClick={()=>alert(\"This feature is not available yet!\")}\r\n        />\r\n        <Settingsblockelement \r\n        img=\"/img/settings.svg\"\r\n        name=\"Über\"\r\n        onClick={()=>alert(\"This feature is not available yet!\")}\r\n        />\r\n        <Settingsblockelement \r\n        img=\"/img/settings.svg\"\r\n        name=\"Auslogen\"\r\n        onClick={()=>this.doLogout()}\r\n        />\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsPage;\r\n","import React from 'react';\r\n\r\n\r\nclass Temperaturepage extends React.Component {\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"temperaturepageBox\">\r\n        <p>Lorem ipsum dolor sit amet, est et quis constituam. His graecis persequeris liberavisse te, accusam consequuntur vel ne. Eu suscipit abhorreant vel, soleat delicatissimi pro an. Duo tibique abhorreant delicatissimi id, dignissim adolescens ea sea. Eu eum minimum iudicabit, id eirmod appellantur duo, eros cibo adversarium te usu. Et vis verterem phaedrum salutatus. Ad tamquam euismod perfecto pro, an ius fugit instructior, has nostrum adolescens honestatis ad.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperaturepage;\r\n","import React from 'react';\r\n\r\n\r\nclass ShortCutElement extends React.Component {\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"shortcutelement\">\r\n          <div background-color=\"#7289DA\" weight=\"80%\" onClick={() => this.props.onClick()}>\r\n              <div background-color=\"#7289DA\"> </div>\r\n              <img alt=\"\" src={this.props.img} weight=\"20px\"></img>\r\n              <div>{this.props.name}</div> \r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShortCutElement;\r\n","import React from 'react';\r\nimport ShortCutElement from './components/ShortCutElement';\r\n\r\n\r\nclass ShortCutsPage extends React.Component {\r\n\r\n  async lichtaus(){\r\n    let res = await fetch('/lichtaus', {\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let result = await res.json();\r\n    alert(result.msg);\r\n  }\r\n  \r\n  \r\n  async lichtan(){\r\n    let res = await fetch('/lichtan', {\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    let result = await res.json();\r\n    alert(result.msg);\r\n  }\r\n\r\n  async customeValue(id, value){\r\n    console.log(id, value);\r\n    let res = await fetch('/customevalue', {\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        cvid: id,\r\n        cvv: value\r\n      }\r\n    )});\r\n    let result = await res.json();\r\n    alert(result.msg);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"shortcutbox\">\r\n        <ShortCutElement\r\n        img=\"/img/settings.svg\"\r\n        name=\"Licht Aus!\"\r\n        onClick={()=>this.lichtaus()}\r\n        />\r\n        <ShortCutElement\r\n        img=\"/img/settings.svg\"\r\n        name=\"Licht An!\"\r\n        onClick={()=>this.lichtan()}\r\n        />\r\n        <ShortCutElement\r\n        img=\"/img/settings.svg\"\r\n        name=\"Custome Aus!\"\r\n        onClick={()=>this.customeValue(1, 0)}\r\n        />\r\n        <ShortCutElement\r\n        img=\"/img/settings.svg\"\r\n        name=\"Custome An!\"\r\n        onClick={()=>this.customeValue(1, 1)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShortCutsPage;\r\n","import React from 'react';\r\n\r\nimport {observer} from 'mobx-react';\r\n\r\nimport UserStore from './stores/UserStore';\r\n\r\nimport LoginForm from './LoginForm';\r\n//import InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\n//import MenuButton from './MenuButton';\r\n\r\n\r\nimport './App.css';\r\nimport HomePage from './pages/HomePage';\r\nimport Footer from './pages/Footer';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport TemperaturePage from './pages/TemperaturePage';\r\nimport ShortCutsPage from './pages/ShortCutsPage';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  async componentDidMount(){\r\n    try{\r\n      if(true){ //DEV MODE\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = \"Test\"\r\n      }else{\r\n        let res = await fetch('/isLoggedIn', {\r\n          method: 'post',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        let result = await res.json();\r\n        if(result && result.success){\r\n          UserStore.loading = false;\r\n          UserStore.isLoggedIn = true;\r\n          UserStore.username = result.username;\r\n        }else{\r\n          UserStore.loading = false;\r\n          UserStore.isLoggedIn = false;\r\n          UserStore.username = '';\r\n        }\r\n      }\r\n      \r\n\r\n\r\n    }catch(e){\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n      UserStore.username = '';\r\n    }\r\n  }\r\n  async doLogout(){\r\n    try{\r\n\r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      let result = await res.json();\r\n\r\n      if(result && result.success){\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    if(UserStore.loading){\r\n      return (\r\n        <div className=\"app\">\r\n          <div className=\"container\">\r\n            Loading, please wait...\r\n          </div>\r\n        </div>\r\n      )\r\n    }else{\r\n      if(UserStore.isLoggedIn){\r\n\r\n        if(UserStore.page === \"settings\"){\r\n          return (\r\n            <div className=\"app\">\r\n              \r\n              <div className=\"container\">\r\n              <div className=\"header\">\r\n                SmartHome\r\n              </div>\r\n                <SettingsPage />\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          )\r\n        }else if(UserStore.page === \"temperature\"){\r\n          return (\r\n            <div className=\"app\">\r\n              \r\n              <div className=\"container\">\r\n              <div className=\"header\">\r\n                SmartHome\r\n              </div>\r\n                <TemperaturePage />\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          )\r\n        }else \r\n        if(UserStore.page === \"shortcuts\"){\r\n          return (\r\n            <div className=\"app\">\r\n              <div className=\"container\">\r\n              <div className=\"header\">\r\n              Shortcuts\r\n              </div>\r\n                <ShortCutsPage />\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          )\r\n        }else\r\n        if(UserStore.page === \"home\"){\r\n          return (\r\n            <div className=\"app\">\r\n              <div className=\"container\">\r\n              <div className=\"header\">\r\n                SmartHome\r\n              </div>\r\n                <HomePage />\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          )\r\n        }else{\r\n          return (\r\n            <div className=\"app\">\r\n              <div className=\"container\">\r\n                Welcome {UserStore.username}!\r\n                <SubmitButton\r\n                  text={'Log out'}\r\n                  disabled={false}\r\n                  onClick={ () => this.doLogout()}\r\n                />\r\n             </div>\r\n            </div>\r\n          )\r\n        }\r\n\r\n        \r\n      }else{\r\n        return (\r\n          <div className=\"app\">\r\n            <div className=\"container\">\r\n              <LoginForm />\r\n           </div>\r\n          </div>\r\n          )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}